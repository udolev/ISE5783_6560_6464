Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"cb5b145a-07fc-4911-b0dc-fd1e0811a828\" name=\"Changes\" comment=\"Fixed triangle test problem.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/geometries/Polygon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/geometries/Polygon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/unittests/geometries/PolygonTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/unittests/geometries/PolygonTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/unittests/geometries/TriangleTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/unittests/geometries/TriangleTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MKAIXU0pdXTLcqizXCA36LWFMs\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\uriel\\IdeaProjects\\ISE5783_6560_6464\\src\\test\" />\r\n      <recent name=\"C:\\Users\\uriel\\IdeaProjects\\ISE5783_6560_6464\\src\\geometries\" />\r\n      <recent name=\"C:\\Users\\uriel\\IdeaProjects\\ISE5783_6560_6464\\src\\primitives\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"geometries\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.PolygonTest\">\r\n    <configuration name=\"GeometriesTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_6560_6464\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.GeometriesTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PlaneTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_6560_6464\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.PlaneTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PolygonTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_6560_6464\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.PolygonTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TriangleTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_6560_6464\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.TriangleTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TriangleTest.testFindIntersections\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ISE5783_6560_6464\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"geometries.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"geometries\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"geometries.TriangleTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testFindIntersections\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.PolygonTest\" />\r\n        <item itemvalue=\"JUnit.GeometriesTest\" />\r\n        <item itemvalue=\"JUnit.TriangleTest.testFindIntersections\" />\r\n        <item itemvalue=\"JUnit.TriangleTest\" />\r\n        <item itemvalue=\"JUnit.PlaneTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"cb5b145a-07fc-4911-b0dc-fd1e0811a828\" name=\"Changes\" comment=\"\" />\r\n      <created>1677505828884</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1677505828884</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Base classes added to project.\">\r\n      <created>1677506606759</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1677506606759</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Final code for exercise 1.\">\r\n      <created>1677680525182</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1677680525182</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00003\" summary=\"notes added for primitives\">\r\n      <created>1679907322054</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679907322054</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00004\" summary=\"Complete javadoc for tests\">\r\n      <created>1679907497962</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1679907497962</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Finished Cylinder tests. Only thing left is Vector tests.\">\r\n      <created>1681484836590</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681484836590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"All tests passed. Final code for exercise 2.\">\r\n      <created>1681597147874</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681597147874</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"added BVA to pointTest.\">\r\n      <created>1681734207796</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681734207796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Started sphere intersections tests.\">\r\n      <created>1681739606719</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681739606719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Finished sphere intersections tests.\">\r\n      <created>1681820356126</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681820356126</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Small fixes\">\r\n      <created>1681824316237</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681824316237</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Finished writing findIntersection functions for plane, triangle and sphere. Need to write: polygon, cylinder. FindIntersection Tests: plane - works completely, sphere - works completely, triangle - works besides one precision problem, polygon - need to write, cylinder - need to write.\">\r\n      <created>1681988808776</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681988808776</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Fixed triangle test problem.\">\r\n      <created>1681995969777</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995969777</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Base classes added to project.\" />\r\n    <MESSAGE value=\"Final code for exercise 1.\" />\r\n    <MESSAGE value=\"notes added for primitives\" />\r\n    <MESSAGE value=\"Complete javadoc for tests\" />\r\n    <MESSAGE value=\"Finished Cylinder tests. Only thing left is Vector tests.\" />\r\n    <MESSAGE value=\"All tests passed. Final code for exercise 2.\" />\r\n    <MESSAGE value=\"added BVA to pointTest.\" />\r\n    <MESSAGE value=\"Started sphere intersections tests.\" />\r\n    <MESSAGE value=\"Finished sphere intersections tests.\" />\r\n    <MESSAGE value=\"Small fixes\" />\r\n    <MESSAGE value=\"Finished writing findIntersection functions for plane, triangle and sphere. Need to write: polygon, cylinder. FindIntersection Tests: plane - works completely, sphere - works completely, triangle - works besides one precision problem, polygon - need to write, cylinder - need to write.\" />\r\n    <MESSAGE value=\"Fixed triangle test problem.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed triangle test problem.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fa5097e20602c5c7a4038d213a1aefa1a840dff3)
+++ b/.idea/workspace.xml	(date 1682601236250)
@@ -4,11 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="cb5b145a-07fc-4911-b0dc-fd1e0811a828" name="Changes" comment="Fixed triangle test problem.">
+    <list default="true" id="cb5b145a-07fc-4911-b0dc-fd1e0811a828" name="Changes" comment="Finished part 3 with polygon (successful tests)&#10;only cylinder left">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/geometries/Polygon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/geometries/Polygon.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/unittests/geometries/PolygonTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/geometries/PolygonTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/unittests/geometries/TriangleTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/geometries/TriangleTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/geometries/Cylinder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/geometries/Cylinder.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/unittests/geometries/CylinderTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/geometries/CylinderTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/unittests/geometries/GeometriesTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/unittests/geometries/GeometriesTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -237,7 +237,14 @@
       <option name="project" value="LOCAL" />
       <updated>1681995969777</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL‎-00013" summary="Finished part 3 with polygon (successful tests)&#10;only cylinder left">
+      <created>1682007169995</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL‎-00013" />
+      <option name="project" value="LOCAL‎" />
+      <updated>1682007169996</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -264,6 +271,7 @@
     <MESSAGE value="Small fixes" />
     <MESSAGE value="Finished writing findIntersection functions for plane, triangle and sphere. Need to write: polygon, cylinder. FindIntersection Tests: plane - works completely, sphere - works completely, triangle - works besides one precision problem, polygon - need to write, cylinder - need to write." />
     <MESSAGE value="Fixed triangle test problem." />
-    <option name="LAST_COMMIT_MESSAGE" value="Fixed triangle test problem." />
+    <MESSAGE value="Finished part 3 with polygon (successful tests)&#10;only cylinder left" />
+    <option name="LAST_COMMIT_MESSAGE" value="Finished part 3 with polygon (successful tests)&#10;only cylinder left" />
   </component>
 </project>
\ No newline at end of file
Index: src/geometries/Cylinder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package geometries;\r\n\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * This class will represent a cylinder in a 3D world.\r\n */\r\npublic class Cylinder extends Tube {\r\n    final private double height;\r\n\r\n    /**\r\n     * Constructor to initialize a cylinder with a radius, a ray and a height value\r\n     */\r\n    public Cylinder(double radius, Ray ray, double h) {\r\n        super(radius, ray);\r\n        height = h;\r\n    }\r\n\r\n    /**\r\n     * Getter\r\n     */\r\n    public double getHeight() {\r\n        return height;\r\n    }\r\n\r\n    @Override\r\n    public Vector getNormal(Point p) {\r\n        Vector v = axisRay.getDir();\r\n        Point p0 = axisRay.getP0();\r\n        // in case of the center point we'll return the direction vector\r\n        if (p.equals(p0)) {\r\n            return v;\r\n        } else {\r\n            double t = v.dotProduct(p.subtract(p0));\r\n            Point o = p0;\r\n            // if the point is on one of the bases\r\n            if (t == 0 || t == height) { // we decided that if it is on the base circle (the edge of the base), the normal will be the base normal\r\n                return v;\r\n            } else {\r\n                return super.getNormal(p);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Point> findIntersections(Ray ray) { return null; }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/geometries/Cylinder.java b/src/geometries/Cylinder.java
--- a/src/geometries/Cylinder.java	(revision fa5097e20602c5c7a4038d213a1aefa1a840dff3)
+++ b/src/geometries/Cylinder.java	(date 1682600234407)
@@ -6,6 +6,8 @@
 
 import java.util.List;
 
+import static primitives.Util.isZero;
+
 /**
  * This class will represent a cylinder in a 3D world.
  */
@@ -38,7 +40,7 @@
             double t = v.dotProduct(p.subtract(p0));
             Point o = p0;
             // if the point is on one of the bases
-            if (t == 0 || t == height) { // we decided that if it is on the base circle (the edge of the base), the normal will be the base normal
+            if (isZero(t) || t == height) { // we decided that if it is on the base circle (the edge of the base), the normal will be the base normal
                 return v;
             } else {
                 return super.getNormal(p);
Index: unittests/geometries/GeometriesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package geometries;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\n\r\nimport java.util.List;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n/**\r\n * Unit tests for geometries.Geometries class\r\n *\r\n * @author Uriel Dolev\r\n */\r\n\r\nclass GeometriesTest {\r\n\r\n    /**\r\n     * Test method for {@link geometries.Geometries#findIntersections(Ray)}.\r\n     */\r\n    @Test\r\n    void findIntersections() {\r\n        Sphere sphere = new Sphere(3, new Point(1, 0, 0));\r\n        Triangle triangle = new Triangle(new Point(-5, 0, -5), new Point(-5, -5, 2), new Point(-5, 5, 2));\r\n        Plane plane = new Plane(new Point(-10, 0, 0), new Vector(1, 0, 0));\r\n        Geometries geometries = new Geometries(sphere, triangle, plane);\r\n        // ============ Equivalence Partitions Tests ==============\r\n        // TC01: of a collection, some shapes are intersected but not all\r\n        List<Point> result = geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(-1, -0.5, 0.5)));\r\n        // ensure that |result| = 3 (sphere - 2, triangle - 0, plane - 1)\r\n        assertEquals(3, result.size(), \"Wrong number of intersections\");\r\n        // =============== Boundary Values Tests ==================\r\n        // TC11: intersection with an empty collection\r\n        assertNull(new Geometries().findIntersections(new Ray(new Point(1, 1, 1), new Vector(1, 2, 3))),\r\n                \"empty collection gives intersection points\");\r\n        // TC12: no shape is intersected\r\n        assertNull(geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(1, -0.5, 0.5))),\r\n                \"Wrong number of intersections\");\r\n        // TC13: only one shape is intersected\r\n        result = geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(-1, -20, 0.5)));\r\n        // ensure that |result| = 1 (sphere - 0, triangle - 0, plane - 1)\r\n        assertEquals(1, result.size(), \"Wrong number of intersections\");\r\n        // TC14: all of the shapes are intersected\r\n        result = geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(-2, -0.5, 0)));\r\n        // ensure that |result| = 4 (sphere - 2, triangle - 1, plane - 1)\r\n        assertEquals(4, result.size(), \"Wrong number of intersections\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/unittests/geometries/GeometriesTest.java b/unittests/geometries/GeometriesTest.java
--- a/unittests/geometries/GeometriesTest.java	(revision fa5097e20602c5c7a4038d213a1aefa1a840dff3)
+++ b/unittests/geometries/GeometriesTest.java	(date 1682601235879)
@@ -42,7 +42,7 @@
         result = geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(-1, -20, 0.5)));
         // ensure that |result| = 1 (sphere - 0, triangle - 0, plane - 1)
         assertEquals(1, result.size(), "Wrong number of intersections");
-        // TC14: all of the shapes are intersected
+        // TC14: all the shapes are intersected
         result = geometries.findIntersections(new Ray(new Point(5, 0, 0), new Vector(-2, -0.5, 0)));
         // ensure that |result| = 4 (sphere - 2, triangle - 1, plane - 1)
         assertEquals(4, result.size(), "Wrong number of intersections");
Index: unittests/geometries/CylinderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package geometries;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport primitives.Point;\r\nimport primitives.Ray;\r\nimport primitives.Vector;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static primitives.Util.isZero;\r\n\r\n/**\r\n * Unit tests for geometries.Cylinder class\r\n * @author Uriel Dolev\r\n */\r\n\r\nclass CylinderTest {\r\n\r\n    /**\r\n     * Test method for {@link geometries.Cylinder#getNormal(primitives.Point)}.\r\n     */\r\n    @Test\r\n    void testGetNormal() {\r\n        Vector dir = new Vector(0,0,1);\r\n        Ray ray = new Ray(new Point(0,0,0), dir);\r\n        double radius = 3, height = 10;\r\n\r\n        Cylinder c = new Cylinder(radius, ray, height);\r\n\r\n        // ============ Equivalence Partitions Tests ==============\r\n        // TC01: The point is on the round surface of the cylinder\r\n        // ensure there are no exceptions\r\n        Point p1 = new Point(3,0,5);\r\n        assertDoesNotThrow(() -> c.getNormal(p1), \"\");\r\n        // generate the test result\r\n        Vector result1 = c.getNormal(p1);\r\n        // ensure |result| = 1\r\n        assertEquals(1, result1.length(), 0.00000001, \"Cylinder's normal to a round surface is not a unit vector\");\r\n        // ensure the result is orthogonal to the ray's direction vector\r\n        assertTrue(isZero(result1.dotProduct(dir)), \"Cylinder's normal to a round surface point is not orthogonal to its ray's direction vector\");\r\n\r\n        // TC02: The point is on the bottom base of the cylinder\r\n        // ensure there are no exceptions\r\n        Point p2 = new Point(2,1,0);\r\n        assertDoesNotThrow(() -> c.getNormal(p2), \"\");\r\n        // generate the test result\r\n        Vector result2 = c.getNormal(p2);\r\n        // ensure |result| = 1\r\n        assertEquals(1, result2.length(), 0.00000001, \"Cylinder's normal to a bottom base point is not a unit vector\");\r\n        // ensure the result is parallel to the ray's direction vector\r\n        assertThrows(IllegalArgumentException.class, () -> result2.crossProduct(dir), \"Cylinder's normal to a bottom base point is not parallel to its ray's direction vector\");\r\n\r\n        // TC03: The point is on the upper base of the cylinder\r\n        // ensure there are no exceptions\r\n        Point p3 = new Point(2,1,10);\r\n        assertDoesNotThrow(() -> c.getNormal(p3), \"\");\r\n        // generate the test result\r\n        Vector result3 = c.getNormal(p3);\r\n        // ensure |result| = 1\r\n        assertEquals(1, result3.length(), 0.00000001, \"Cylinder's normal to an upper base point is not a unit vector\");\r\n        // ensure the result is parallel to the ray's direction vector\r\n        assertThrows(IllegalArgumentException.class, () -> result3.crossProduct(dir), \"Cylinder's normal to an upper base point is not parallel to its ray's direction vector\");\r\n\r\n        // =============== Boundary Values Tests ==================\r\n        // TC11: The point is the center of the bottom base\r\n        // ensure there are no exceptions\r\n        Point centerP1 = new Point(0,0,0);\r\n        assertDoesNotThrow(() -> c.getNormal(centerP1), \"\");\r\n        // generate the test result\r\n        Vector vr1 = c.getNormal(centerP1);\r\n        // ensure |result| = 1\r\n        assertEquals(1, vr1.length(), 0.00000001, \"Cylinder's bottom center normal is not a unit vector\");\r\n        // ensure that the result is orthogonal to the tube's direction vector\r\n        assertThrows(IllegalArgumentException.class, () -> vr1.crossProduct(dir), \"Cylinder's normal to bottom base center point is not parallel to its ray's direction vector\");\r\n\r\n        // TC12: The point is the center of the upper base\r\n        // ensure there are no exceptions\r\n        Point centerP2 = new Point(0,0,10);\r\n        assertDoesNotThrow(() -> c.getNormal(centerP2), \"\");\r\n        // generate the test result\r\n        Vector vr2 = c.getNormal(centerP2);\r\n        // ensure |result| = 1\r\n        assertEquals(1, vr2.length(), 0.00000001, \"Cylinder's upper center normal is not a unit vector\");\r\n        // ensure that the result is orthogonal to the tube's direction vector\r\n        assertThrows(IllegalArgumentException.class, () -> vr2.crossProduct(dir), \"Cylinder's normal to upper base center point is not parallel to its ray's direction vector\");\r\n    }\r\n\r\n    /**\r\n     * Test method for {@link geometries.Cylinder#findIntersections(Ray)}.\r\n     */\r\n    @Test\r\n    void testFindIntersections() {\r\n        \r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/unittests/geometries/CylinderTest.java b/unittests/geometries/CylinderTest.java
--- a/unittests/geometries/CylinderTest.java	(revision fa5097e20602c5c7a4038d213a1aefa1a840dff3)
+++ b/unittests/geometries/CylinderTest.java	(date 1682601517419)
@@ -5,6 +5,8 @@
 import primitives.Ray;
 import primitives.Vector;
 
+import java.util.List;
+
 import static org.junit.jupiter.api.Assertions.*;
 import static primitives.Util.isZero;
 
@@ -89,7 +91,6 @@
      */
     @Test
     void testFindIntersections() {
-        
     }
 
 }
\ No newline at end of file
